---
apiVersion: v1
kind: ServiceAccount
metadata:
 name: upi-service-prod
 namespace: prod
 annotations:
   eks.amazonaws.com/role-arn: arn:aws:iam::693798407829:role/payments_upi_service_prod_eks_execution_role
   eks.amazonaws.com/sts-regional-endpoints: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upi-service-prod
  namespace: prod
spec:
  replicas: 8
  selector:
    matchLabels:
      app: upi-service-prod
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: upi-service-prod
    spec:
      serviceAccountName: upi-service-prod
      hostAliases:
      - ip: "10.10.10.217"
        hostnames:
        - "upippi.mobikwik.com"
      # affinity:
      #   nodeAffinity:
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #     - weight: 60
      #       preference:   
      #         matchExpressions:
      #         - key: node.kubernetes.io/lifecycle
      #           operator: In
      #           values:
      #           - ondemand
      #     - weight: 40
      #       preference:
      #         matchExpressions:
      #         - key: node.kubernetes.io/lifecycle
      #           operator: In
      #           values:
      #           - spot
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node.kubernetes.io/lifecycle
                operator: In
                values:
                - ondemand
      terminationGracePeriodSeconds: 90
      containers:
      - name: upi-service-prod
        image: 693798407829.dkr.ecr.ap-south-1.amazonaws.com/payments-upi-prod-service:BUILD_NUMBER
        resources:
          requests:
            memory: "6.5Gi"
            cpu: "2000m"
            #ephemeral-storage: "350Gi"
          limits:
            memory: "8Gi"
            cpu: "4000m"
            #ephemeral-storage: "400Gi"
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /p/upi/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 20
          periodSeconds: 30
          failureThreshold: 10
        startupProbe:
          httpGet:
            path: /p/upi/health
            port: 8080
          periodSeconds: 20
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /p/upi/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        volumeMounts:
          - name: upi-service-prod-logs
            mountPath: /opt/app/logs
      - name: upi-service-prod-logs
        image: 693798407829.dkr.ecr.ap-south-1.amazonaws.com/fluent-bit:3.0-debug
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "3.5Gi"
            cpu: "2000m"
        volumeMounts:
          - name: upi-service-prod-logs
            mountPath: /opt/app/logs
          - name: upi-service-prod-logs-conf
            mountPath: /fluent-bit/etc/
      volumes:
        - name: upi-service-prod-logs
          emptyDir: {}
        - configMap:
            defaultMode: 420
            name: upi-service-prod-logs-conf
          name: upi-service-prod-logs-conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upi-service-newrelic
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: upi-service-newrelic
  template:
    metadata:
      labels:
        app: upi-service-newrelic
    spec:
      serviceAccountName: upi-service-prod
      hostAliases:
      - ip: "10.10.10.217"
        hostnames:
        - "upippi.mobikwik.com"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node.kubernetes.io/lifecycle
                operator: In
                values:
                - ondemand
            weight: 100
      terminationGracePeriodSeconds: 90
      containers:
      - name: upi-canary
        image: 693798407829.dkr.ecr.ap-south-1.amazonaws.com/payments-upi-prod-service-newrelic:BUILD_NUMBER
        resources:
          requests:
            memory: "6.5Gi"
            cpu: "2000m"
            #ephemeral-storage: "350Gi"
          limits:
            memory: "8Gi"
            cpu: "4000m"
            #ephemeral-storage: "400Gi"
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /p/upi/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 20
          periodSeconds: 30
          failureThreshold: 10
        startupProbe:
          httpGet:
            path: /p/upi/health
            port: 8080
          periodSeconds: 20
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /p/upi/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        volumeMounts:
          - name: upi-service-prod-logs
            mountPath: /opt/app/logs
      - name: upi-service-prod-logs
        image: 693798407829.dkr.ecr.ap-south-1.amazonaws.com/fluent-bit:3.0-debug
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "3.5Gi"
            cpu: "2000m"
        volumeMounts:
          - name: upi-service-prod-logs
            mountPath: /opt/app/logs
          - name: upi-service-prod-logs-conf
            mountPath: /fluent-bit/etc/
      volumes:
        - name: upi-service-prod-logs
          emptyDir: {}
        - configMap:
            defaultMode: 420
            name: upi-service-prod-logs-conf
          name: upi-service-prod-logs-conf
---
apiVersion: v1
kind: Service
metadata:
  name: upi-service-prod
  namespace: prod
spec:
  selector:
    app: upi-service-prod
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: upi-service-newrelic
  namespace: prod
spec:
  selector:
    app: upi-service-newrelic
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: upi-service-prod-logs-conf
  namespace: prod
data:
  fluent-bit.conf: |-
    [SERVICE]
        Flush   5
        Grace   30
        Log_Level   info
        Parsers_File /fluent-bit/parsers/parsers.conf
    [INPUT]
        Name                tail
        Path                /opt/app/logs/application.info.log
        Tag                 upi-service-prod
        DB                  /var/log/flb_service.db
        DB.locking          true
        Skip_Long_Lines     On
        Refresh_Interval    10
        Rotate_Wait         30
    [FILTER]
        Name record_modifier
        Match *
        Record hostname ${HOSTNAME}
    [OUTPUT]
        Name    		  loki
        Match   		  upi-service-prod
        Host    		  loki-live.mbkinternal.in
        Port    		  3100
        labels            job=upi-service-prod
        label_keys        $sub['stream']
    [OUTPUT]
        Name                  s3
        Match                 upi-service-prod
        bucket                application-blackhole-s3
        region                ap-south-1
        total_file_size       50M
        s3_key_format         /upi-service/$TAG/%Y/%m/%d/%H/%M/$UUID.gz
        s3_key_format_tag_delimiters .-
        compression           gzip
        use_put_object        On
        upload_timeout        60m
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name:  upi-service-prod
  namespace: prod
  annotations:
    kubernetes.io/tls-acme: "false"
#    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-headers: content-type, x-mclient, token, authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      keepalive_timeout 600s;
      send_timeout 600s;
    nginx.ingress.kubernetes.io/server-snippet: |
      underscores_in_headers on;
      if ($uri ~* "/actuator") {
        return 403;
      }
      proxy_ignore_client_abort "on";
      grpc_read_timeout 300s;
      grpc_send_timeout 300s;
      client_body_timeout 300s;
      proxy_read_timeout 300s;
spec:
 ingressClassName: npci-internal-nginx
 rules:
  - host: upi-service.mbkinternal.in
    http:
      paths:
      - path: /p/upi
        pathType: Prefix
        backend:
          service:
            name: upi-service-prod
            port:
              number: 8080
      - path: /p/upi/ppi
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
      - path: /p/upi/psp/isWalletUpiEligible
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
      - path: /p/upi/psp/check/txn/status
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
      - path: /p/upi/psp/process/pay
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
      - path: /p/upi/psp/collect/approve
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name:  upi-service-prod-newrelic
  namespace: prod
  annotations:
    kubernetes.io/tls-acme: "false"
    # nginx.ingress.kubernetes.io/rewrite-target:
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "10"
    nginx.ingress.kubernetes.io/cors-allow-headers: content-type, x-mclient, token, authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      keepalive_timeout 600s;
      send_timeout 600s;
    nginx.ingress.kubernetes.io/server-snippet: |
      underscores_in_headers on;
      if ($uri ~* "/actuator") {
        return 403;
      }
      proxy_ignore_client_abort "on";
      grpc_read_timeout 300s;
      grpc_send_timeout 300s;
      client_body_timeout 300s;
      proxy_read_timeout 300s;
spec:
 ingressClassName: npci-internal-nginx
 rules:
  - host: upi-service.mbkinternal.in
    http:
      paths:
      - path: /p/upi
        pathType: Prefix
        backend:
          service:
            name: upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/ppi
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/psp/isWalletUpiEligible
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/psp/check/txn/status
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/psp/process/pay
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/psp/collect/approve
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name:  upi-service-prod-public
  namespace: prod
  annotations:
    kubernetes.io/tls-acme: "false"
#    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-headers: content-type, x-mclient, token, authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/whitelist-source-range: "125.18.94.34/32"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      keepalive_timeout 600s;
      send_timeout 600s;
    nginx.ingress.kubernetes.io/server-snippet: |
      underscores_in_headers on;
      if ($uri ~* "/actuator") {
        return 403;
      }
      proxy_ignore_client_abort "on";
      grpc_read_timeout 300s;
      grpc_send_timeout 300s;
      client_body_timeout 300s;
      proxy_read_timeout 300s;
spec:
 ingressClassName: npci-external-nginx
 rules:
  - host: upi.mobikwik.com
    http:
      paths:
      - path: /p/upi
        pathType: Prefix
        backend:
          service:
            name: upi-service-prod
            port:
              number: 8080
      - path: /p/upi/ppi
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
      - path: /p/upi/psp/isWalletUpiEligible
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
      - path: /p/upi/psp/check/txn/status
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
      - path: /p/upi/psp/process/pay
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
      - path: /p/upi/psp/collect/approve
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-prod
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name:  upi-service-prod-newrelic-public
  namespace: prod
  annotations:
    kubernetes.io/tls-acme: "false"
    # nginx.ingress.kubernetes.io/rewrite-target:
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "20"
    nginx.ingress.kubernetes.io/cors-allow-headers: content-type, x-mclient, token, authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/whitelist-source-range: "125.18.94.34/32"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      keepalive_timeout 600s;
      send_timeout 600s;
    nginx.ingress.kubernetes.io/server-snippet: |
      underscores_in_headers on;
      if ($uri ~* "/actuator") {
        return 403;
      }
      proxy_ignore_client_abort "on";
      grpc_read_timeout 300s;
      grpc_send_timeout 300s;
      client_body_timeout 300s;
      proxy_read_timeout 300s;
spec:
 ingressClassName: npci-external-nginx
 rules:
  - host: upi.mobikwik.com
    http:
      paths:
      - path: /p/upi
        pathType: Prefix
        backend:
          service:
            name: upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/ppi
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/psp/isWalletUpiEligible
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/psp/check/txn/status
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/psp/process/pay
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      - path: /p/upi/psp/collect/approve
        pathType: Prefix
        backend:
          service:
            name: interop-upi-service-newrelic
            port:
              number: 8080
      
